{
	"name": "Streadata.io API Gallery - Load Balancers",
	"description": "This is a repository of load balancers APIs, self-contained as a Github repository, with HTML and YAML representations of the APIs and their surrounding operations.",
	"image": "http://template.streamdata.gallery/assets/load-balancers.png",
	"created": "2018-02-24",
	"modified": "2018-08-28",
	"url": "http://load-balancers.streamdata.gallery/apis.json",
	"specificationVersion": "0.14",
	"apis": [
		{
			"name": "AWS OpsWorks",
			"x-api-slug": "aws-opsworks",
			"description": "AWS OpsWorks is a configuration management service that uses Chef, an automation platform that treats server configurations as code. OpsWorks uses Chef to automate how servers are configured, deployed, and managed across your Amazon Elastic Compute Cloud (Amazon EC2) instances or on-premises compute environments. OpsWorks has two offerings, AWS Opsworks for Chef Automate, and AWS OpsWorks Stacks.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Management-Tools_AWSOpsWorks.png",
			"humanURL": "https://aws.amazon.com/opsworks/",
			"baseURL": ":///",
			"tags": "Load Balancers",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load-balancers/master/_listings/aws-opsworks/openapi.md"
				}
			]
		},
		{
			"name": "AWS Auto Scaling",
			"x-api-slug": "aws-auto-scaling",
			"description": "Auto Scaling helps you maintain application availability and allows you to scale yourAmazon EC2capacity up or down automatically according to conditions you define. You can use Auto Scaling to help ensure that you are running your desired number of Amazon EC2 instances. Auto Scaling can also automatically increase the number of Amazon EC2 instances during demand spikes to maintain performance and decrease capacity during lulls to reduce costs. Auto Scaling is well suited both to applications that have stable demand patterns or that experience hourly, daily, or weekly variability in usage.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Compute_AmazonEC2_AutoScaling.png",
			"humanURL": "https://aws.amazon.com/autoscaling/",
			"baseURL": ":///",
			"tags": "Load Balancers",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load-balancers/master/_listings/aws-auto-scaling/openapi.md"
				}
			]
		},
		{
			"name": "AWS Elastic Load Balancing",
			"x-api-slug": "aws-elastic-load-balancing",
			"description": "Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon EC2 instances. It enables you to achieve fault tolerance in your applications, seamlessly providing the required amount of load balancing capacity needed to route application traffic.Elastic Load Balancing offers two types of load balancers that both feature high availability, automatic scaling, and robust security. These include theClassic Load Balancerthat routes traffic based on either application or network level information, and theApplication Load Balancerthat routes traffic based on advanced application level information that includes the content of the request. The Classic Load Balancer is ideal for simple load balancing of traffic across multiple EC2 instances, while the Application Load Balancer is ideal for applications needing advanced routing capabilities, microservices, and container-based architectures. Application Load Balancer offers ability to route traffic to multiple services or load balance across multiple ports on the same EC2 instance.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Compute_ElasticLoadBalancing.png",
			"humanURL": "https://aws.amazon.com/elasticloadbalancing/",
			"baseURL": ":///",
			"tags": "Load Balancers",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load-balancers/master/_listings/aws-elastic-load-balancing/openapi.md"
				}
			]
		},
		{
			"name": "Azure Virtual Network",
			"x-api-slug": "azure-virtual-network",
			"description": "Azure Virtual Network lets you create private networks in the cloud with full control over IP addresses, DNS servers, security rules, and traffic flows. Securely connect a virtual network to on-premises networks by using a VPN tunnel, or connect privately by using the ExpressRoute service.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/azure-network-topology.png",
			"humanURL": "https://azure.microsoft.com/en-us/services/virtual-network/",
			"baseURL": "://management.azure.com//",
			"tags": "Load Balancers",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load-balancers/master/_listings/azure-virtual-network/openapi.md"
				}
			]
		},
		{
			"name": "Avaza",
			"x-api-slug": "avaza",
			"description": "Avaza is a beautiful online software suite with modules for Project Management, Timesheets, Expenses &amp; Invoicing. Access from anywhere, with any device. Avaza is the leading all-in-one software for running client focused businesses. Avaza allows businesses of all sizes to more easily and effectively manage team projects, time tracking, expense reporting, quoting &amp; invoicing. It can be accessed simply via a web browser from anywhere in the world on any device.",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/28373-avaza.jpg",
			"humanURL": "https://www.avaza.com",
			"baseURL": "https:///",
			"tags": "Load Balancers",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load-balancers/master/_listings/avaza/openapi.md"
				}
			]
		}
	],
	"tags": "Load Balancers",
	"include": [
		{
			"name": "AWS OpsWorks",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load-balancers/master/_listings/aws-opsworks/apis.yaml"
		},
		{
			"name": "AWS Auto Scaling",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load-balancers/master/_listings/aws-auto-scaling/apis.yaml"
		},
		{
			"name": "AWS Elastic Load Balancing",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load-balancers/master/_listings/aws-elastic-load-balancing/apis.yaml"
		},
		{
			"name": "Azure Virtual Network",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load-balancers/master/_listings/azure-virtual-network/apis.yaml"
		},
		{
			"name": "Avaza",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load-balancers/master/_listings/avaza/apis.yaml"
		}
	]
}